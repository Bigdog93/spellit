/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 NewCha.glb
*/

import { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export default function Magician(props) {
  const { nodes, materials } = useGLTF("./models/homeglb/magician.glb");

  const magicianRef = useRef(null);

  useFrame((state, delta) => {
    if (magicianRef.current) {
      magicianRef.current.position.y =  Math.sin(
        state.clock.elapsedTime * 3
        // state.clock.elapsedTime * 0.2
      ) * 0.1;
    }
  });

  return (
    <group {...props} dispose={null} scale={[5, 5, 5]} ref={magicianRef}>
    {/* <group {...props} dispose={null}  ref={magicianRef}> */}
      <mesh
        geometry={nodes.magician.geometry}
        material={materials.magician}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </group>
  );
}
